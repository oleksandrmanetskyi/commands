<Page
    x:Class="Commands.Views.CommandsDetailPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewmodels="using:Commands.ViewModels" 
    xmlns:models="using:Commands.Core.Models"
    xmlns:actionPlugins="using:Commands.Core.ActionPlugins"
    xmlns:helpers="using:Commands.Helpers" 
    xmlns:behaviors="using:Commands.Behaviors" xmlns:controls="using:Commands.Controls"
    d:DataContext="{d:DesignInstance Type=viewmodels:CommandDetailViewModel}"
    mc:Ignorable="d">

    <Page.Resources>
        <DataTemplate x:Key="CommandLineTemplate" x:DataType="models:Action">
            <controls:ActionHeaderControl PluginName="{x:Bind PluginName}">
                <controls:ActionHeaderControl.ContentInside>
                    <StackPanel>
                        <TextBox
                            Margin="{StaticResource SmallTopMargin}"
                            Header="Execute the following script"
                            IsSpellCheckEnabled="False"
                            AcceptsReturn="True"
                            ScrollViewer.HorizontalScrollMode="Auto"
                            Text="{x:Bind Parameters['Script'], Mode=TwoWay}" />
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="{StaticResource SmallTopMargin}">
                            <TextBlock Text="And save output to" VerticalAlignment="Center" />
                            <Border CornerRadius="10" Padding="5, 0, 5, 2" Margin="{StaticResource XSmallLeftMargin}" Background="{ThemeResource AccentFillColorDefaultBrush}">
                                <TextBlock Text="{x:Bind VariableNames[0], Mode=OneTime}" Padding="0" Foreground="{ThemeResource TextOnAccentFillColorPrimaryBrush}" Tapped="TextBlock_Tapped" />
                            </Border>
                            <TextBlock Text="and error to" VerticalAlignment="Center" Margin="{StaticResource XSmallLeftMargin}"/>
                            <Border CornerRadius="10" Padding="5, 0, 5, 2" Margin="{StaticResource XSmallLeftMargin}" Background="{ThemeResource AccentFillColorDefaultBrush}">
                                <TextBlock Text="{x:Bind VariableNames[1], Mode=OneTime}" Padding="0" Foreground="{ThemeResource TextOnAccentFillColorPrimaryBrush}" Tapped="TextBlock_Tapped" />
                            </Border>
                        </StackPanel>
                        
                    </StackPanel>
                </controls:ActionHeaderControl.ContentInside>
            </controls:ActionHeaderControl>
        </DataTemplate>

        <DataTemplate x:Key="UserInputTemplate" x:DataType="models:Action">
            <controls:ActionHeaderControl PluginName="{x:Bind PluginName}">
                <controls:ActionHeaderControl.ContentInside>
                    <StackPanel>
                        <TextBox 
                            Margin="{StaticResource SmallTopMargin}"
                            Header="Show user input with the following placeholder"
                            Text="{x:Bind Parameters['Placeholder'], Mode=TwoWay}"/>
                        <TextBox 
                            Margin="{StaticResource SmallTopMargin}"
                            Header="Use the following default value"
                            Text="{x:Bind Parameters['DefaultValue'], Mode=TwoWay}"/>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="{StaticResource SmallTopMargin}">
                            <TextBlock Text="And save input to" VerticalAlignment="Center" />
                            <Border CornerRadius="10" Padding="5, 0, 5, 2" Margin="{StaticResource XSmallLeftMargin}" Background="{ThemeResource AccentFillColorDefaultBrush}">
                                <TextBlock Text="{x:Bind VariableNames[0], Mode=OneTime}" Padding="0" Foreground="{ThemeResource TextOnAccentFillColorPrimaryBrush}" />
                            </Border>
                        </StackPanel>
                    </StackPanel>
                </controls:ActionHeaderControl.ContentInside>
            </controls:ActionHeaderControl>
        </DataTemplate>

        <DataTemplate x:Key="DisplayMessageTemplate" x:DataType="models:Action">
            <controls:ActionHeaderControl PluginName="{x:Bind PluginName}">
                <controls:ActionHeaderControl.ContentInside>
                    <StackPanel>
                        <TextBox 
                            Margin="{StaticResource SmallTopMargin}"
                            Header="Show message with the following text"
                            Text="{x:Bind Parameters['Message'], Mode=TwoWay}"/>
                        <TextBox 
                            Margin="{StaticResource SmallTopMargin}"
                            Header="With the following title"
                            Text="{x:Bind Parameters['Title'], Mode=TwoWay}"/>
                    </StackPanel>
                </controls:ActionHeaderControl.ContentInside>
            </controls:ActionHeaderControl>
        </DataTemplate>

        <helpers:ActionDataTemplateSelector x:Key="ActionDataTemplateSelector"
            CommandLineTemplate="{StaticResource CommandLineTemplate}"
            UserInputTemplate="{StaticResource UserInputTemplate}"
            DisplayMessageTemplate="{StaticResource DisplayMessageTemplate}"/>

        <helpers:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Page.Resources>

    <Grid>
        <Grid 
            RowDefinitions="*, Auto" 
            Visibility="{x:Bind ViewModel.CommandOutputViewOpened, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=invert}">
            <Grid Grid.Row="0">
                <ScrollViewer>
                    <StackPanel HorizontalAlignment="Stretch">
                        <TextBox
                            Header="Name:"
                            Text="{x:Bind ViewModel.Command.Name, Mode=TwoWay}"
                            HorizontalAlignment="Left"
                            Width="300" />
                        <TextBlock Margin="{ThemeResource MediumTopMargin}" Text="Actions:" />
                        <ItemsRepeater 
                            ItemsSource="{x:Bind ViewModel.Command.Actions, Mode=OneWay}" 
                            ItemTemplate="{StaticResource ActionDataTemplateSelector}"
                            HorizontalAlignment="Left">
                        </ItemsRepeater>
                        <DropDownButton Content="Add new action" Margin="{StaticResource SmallTopMargin}">
                            <DropDownButton.Flyout>
                                <Flyout Placement="Bottom">
                                    <ListView
                                        x:Name="AvaliableActionsListView"
                                        ItemsSource="{x:Bind ViewModel.GetActionPlugins()}" 
                                        Height="130"
                                        ItemClick="AvaliableActionsListView_ItemClick"
                                        SelectionMode="None"
                                        IsItemClickEnabled="True">
                                        <ListView.ItemTemplate>
                                            <DataTemplate x:DataType="actionPlugins:IActionPlugin">
                                                <StackPanel Orientation="Horizontal">
                                                    <ImageIcon 
                                                        Width="16"
                                                        Source="{x:Bind helpers:ActionIconResolverHelper.GetIconByName(Name)}" />
                                                    <TextBlock 
                                                        Text="{x:Bind Name}" Margin="{StaticResource XSmallLeftMargin}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </Flyout>
                            </DropDownButton.Flyout>
                        </DropDownButton>
                    </StackPanel>
                </ScrollViewer>
            </Grid>

            <!-- <StackPanel Grid.Row="1" Padding="{StaticResource FooterPadding}" Orientation="Horizontal">
                <Button Content="Move to another workspace" />
                <Button Margin="{StaticResource SmallLeftMargin}" Background="Firebrick" Foreground="White">
                    <StackPanel Orientation="Horizontal">
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE74D;" FontSize="14"/>
                        <TextBlock Text="Delete" Margin="{StaticResource XSmallLeftMargin}" />
                    </StackPanel>

                    <Button.Flyout>
                        <Flyout>
                            <StackPanel>
                                <TextBlock 
                                    Style="{ThemeResource BaseTextBlockStyle}" 
                                    Text="The command will be removed. Do you want to continue?" />
                                <Button Content="Yes, delete" Margin="{StaticResource SmallTopMargin}"/>
                            </StackPanel>
                        </Flyout>
                    </Button.Flyout>

                </Button>
            </StackPanel> -->
        </Grid>
        <Grid 
            x:Name="OutputWindow" 
            Visibility="{x:Bind ViewModel.CommandOutputViewOpened, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
            RowDefinitions="*, Auto, *"
            VerticalAlignment="Stretch">
            <StackPanel>
                <ProgressBar 
                    Grid.Row="0"
                    IsIndeterminate="True"
                    Width="300" 
                    Visibility="{x:Bind ViewModel.CommandIsRunning, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" />
                <TextBox
                    Grid.Row="1"
                    Margin="{StaticResource SmallTopMargin}"
                    Text="{x:Bind ViewModel.CommandOutput, Mode=OneWay}"
                    TextWrapping="Wrap"
                    IsReadOnly="True"/>
                <Button Grid.Row="2" Margin="{StaticResource SmallTopMargin}" Content="Close" Command="{x:Bind ViewModel.CloseOutputCommandButtonClickCommand}" />
            </StackPanel>
        </Grid>
    </Grid>

    <behaviors:NavigationViewHeaderBehavior.HeaderTemplate>
        <DataTemplate x:DataType="viewmodels:CommandDetailViewModel">
            <Grid>
                <TextBlock
                    Text="{x:Bind Command.Name}"
                    HorizontalAlignment="Left"
                    Style="{ThemeResource TitleTextBlockStyle}"
                    VerticalAlignment="Center" />

                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button 
                        Command="{x:Bind RunButtonClickCommand}"
                        VerticalAlignment="Center"
                        IsEnabled="{x:Bind CommandIsRunning.Equals(x:False), Mode=OneWay}">
                        <StackPanel Orientation="Horizontal">
                            <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xF5B0;" FontSize="14" Foreground="Green"/>
                            <TextBlock x:Uid="Command_Run" Margin="{StaticResource XSmallLeftMargin}" />
                        </StackPanel>
                    </Button>

                    <Button Margin="{StaticResource SmallLeftMargin}">
                        <FontIcon FontFamily="{StaticResource SymbolThemeFontFamily}" Glyph="&#xE712;"/>
                        <Button.Flyout>
                            <MenuFlyout Placement="Bottom">
                                <MenuFlyoutItem 
                                    Text="Starred" 
                                    Visibility="{x:Bind CommandStarredVisibility(x:True), Mode=OneWay}" 
                                    Command="{x:Bind StarCommandButtonClickCommand}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE735;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem 
                                    Text="Star" 
                                    Visibility="{x:Bind CommandStarredVisibility(x:False), Mode=OneWay}"
                                    Command="{x:Bind StarCommandButtonClickCommand}">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE734;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem Text="Move">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE8DE;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                                <MenuFlyoutItem Text="Delete">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE74D;"/>
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                            </MenuFlyout>
                        </Button.Flyout>
                    </Button>
                </StackPanel>
                
            </Grid>
        </DataTemplate>
    </behaviors:NavigationViewHeaderBehavior.HeaderTemplate>
</Page>
